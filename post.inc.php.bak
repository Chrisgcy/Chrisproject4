<style>
.col-centered {
		float:none;
		margin: 0 auto;
}
</style>

<form id="fileupload" action="fileuploadhandler.php" method="POST" enctype="multipart/form-data">
    <div class="row fileupload-buttonbar">
        <div class="col-lg-7">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
		        <i class="glyphicon glyphicon-plus"></i>
		        <span>Add files...</span>
		        <input type="file" name="files[]" multiple>
                <!-- The file input field used as target for the file upload widget -->
                <!--<input id="fileupload" type="file" name="files[]" multiple>-->
            </span>
            <button type="submit" id="fileupload_submit" class="btn btn-primary start">
                <i class="glyphicon glyphicon-upload"></i>
                <span>Start upload</span>
            </button>
        </div>
    </div>
    <!-- The container for the uploaded files -->
    <div id="files" class="files"></div>
    
    <textarea id="micropost_content" name="micropost[content]" placeholder="Give comment ..." style="width:100%"></textarea>
    <!-- The global progress bar -->
    <div id="progress" class="progress">
        <div class="progress-bar progress-bar-success"></div>
    </div>
<br>
<br>

<br>

</form>


<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="https://rawgit.com/blueimp/jQuery-File-Upload/master/js/vendor/jquery.ui.widget.js"></script>
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="http://blueimp.github.io/JavaScript-Templates/js/tmpl.min.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="http://blueimp.github.io/JavaScript-Load-Image/js/load-image.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="http://blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
<!-- blueimp Gallery script -->
<script src="http://blueimp.github.io/Gallery/js/jquery.blueimp-gallery.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="https://rawgit.com/blueimp/jQuery-File-Upload/master/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="https://rawgit.com/blueimp/jQuery-File-Upload/master/js/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="https://rawgit.com/blueimp/jQuery-File-Upload/master/js/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="https://rawgit.com/blueimp/jQuery-File-Upload/master/js/jquery.fileupload-image.js"></script>
<!-- The File Upload audio preview plugin -->
<script src="https://rawgit.com/blueimp/jQuery-File-Upload/master/js/jquery.fileupload-audio.js"></script>
<!-- The File Upload video preview plugin -->
<script src="https://rawgit.com/blueimp/jQuery-File-Upload/master/js/jquery.fileupload-video.js"></script>
<!-- The File Upload validation plugin -->
<script src="https://rawgit.com/blueimp/jQuery-File-Upload/master/js/jquery.fileupload-validate.js"></script>


<script>
/*jslint unparam: true, regexp: true */
/*global window, $ */
$(function () {
	'use strict';
    // Change this to the location of your server-side upload handler:
    var url = 'server/php/',
    //var url = "fileuploadhandler.php";
	uploadButton = $('<button/>')
        .addClass('btn btn-primary')
        .prop('disabled', true)
        .text('Processing...')
        .on('click', function () {
                        var $this = $(this),
                            data = $this.data();
    //                    for(var name in data) {
    //                        alert(name);
    //                        var value = data[name];
    //                        alert(value);
    //                    }
                        $this.off('click')
                            .text('Abort')
                            .on('click', function () {
                                            $this.remove();
                                            data.abort();
                            });
                        data.submit().always(function () {
                            $this.remove();
                        }
        );
            
});
$('#fileupload').fileupload({
	url: "fileuploadhandler.php",
	dataType: 'json',
	autoUpload: false,
	acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
	maxFileSize: 5000000, // 5 MB
	// Enable image resizing, except for Android and Opera,
	// which actually support image resizing, but fail to
	// send Blob objects via XHR requests:
	disableImageResize: /Android(?!.*Chrome)|Opera/
	.test(window.navigator.userAgent),
	previewMaxWidth: 100,
	previewMaxHeight: 100,
	previewCrop: true
	}).on('fileuploadadd', function (e, data) {
                                data.context = $('<div/>').appendTo('#files');
                                $.each(data.files, function (index, file) {
                                                        var node = $('<p/>').append($('<span/>').text(file.name));
                                                        if (!index) {
                                                        //    node.append('<br>').append(uploadButton.clone(true).data(data));
                                                            $('#fileupload_submit')
                                                                .prop('disabled', true)
                                                                .text('Processing...')
                                                                .on('click', function () {
                                                                    var $this = $(this),
                                                                    data = $this.data();
                                                                    $this.off('click')
                                                                        .text('Abort')
                                                                        .on('click', function () {
                                                                            $this.remove();
                                                                            data.abort();
                                                                        });
                                                                        data.submit().always(function () {
                                                                            $this.remove();
                                                                        });
                                                                });
                                                            $('#fileupload_submit').clone(true).data(data);
                                                            alert($('#fileupload_submit').html());
                                                        }
                                                        node.appendTo(data.context);
                                                        alert("add:"+node.html());
                                });
	}).on('fileuploadprocessalways', function (e, data) {
                                        var index = data.index,
                                            file = data.files[index],
                                            node = $(data.context.children()[index]);
                                            alert("node: "+data.context.childdata.context.children()[index]]);
                                        if (file.preview) {
                                            node.prepend('<br>').prepend(file.preview);
                                        }
                                        if (file.error) {
                                            node.append('<br>').append($('<span class="text-danger"/>').text(file.error));
                                        }
                                        if (index + 1 === data.files.length) {
                                            //data.context.find('button').text('Upload').prop('disabled', !!data.files.error);
                                            $('#fileupload_submit').text('Upload').prop('disabled', !!data.files.error);
                                        }
          alert("processalways: "+data.context.html());
    }).on('fileuploadprogressall', function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        $('#progress .progress-bar').css(
            'width',
            progress + '%'
        );
    }).on('fileuploaddone', function (e, data) {
        $.each(data.result.files, function (index, file) {
            if (file.url) {
                var link = $('<a>').attr('target', '_blank').prop('href', file.url);
                $(data.context.children()[index]).wrap(link);
            } else if (file.error) {
                var error = $('<span class="text-danger"/>').text(file.error);
                $(data.context.children()[index]).append('<br>').append(error);
            }
        });
    }).on('fileuploadfail', function (e, data) {
        $.each(data.files, function (index, file) {
            var error = $('<span class="text-danger"/>').text('File upload failed.');
            $(data.context.children()[index]).append('<br>').append(error);
        });
    }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');
});
</script>
